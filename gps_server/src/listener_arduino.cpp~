#include "ros/ros.h"
#include "std_msgs/String.h"

#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>  
#include <iostream>
#include <string>
#include <vector>
#include <stdio.h>
#include "serial.hpp" //important for you



std::string s;
char mySendBuf[256];
char myRecBuf[256];


void chatterCallback(const std_msgs::String::ConstPtr& msg)
{
  //ROS_INFO("I heard: [%s]", msg->data.c_str());
  s=msg->data;
  ros::Rate loop_rate(10);

  if(s=="0"){
    ROS_INFO("I heard 0");
    sprintf(mySendBuf, "0"); 
    serialTransmitSimple(mySendBuf, 1);
    ros::spinOnce();
    loop_rate.sleep();

  }
  else if(s=="1"){
    ROS_INFO("I heard 1");
    sprintf(mySendBuf, "1"); 
    serialTransmitSimple(mySendBuf, 1);
    ros::spinOnce();
    loop_rate.sleep();

  }

}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "listener");
  ros::NodeHandle n;
  ros::Subscriber sub = n.subscribe("chatter", 1000, chatterCallback);
  ros::spin();
  return 0;
}
